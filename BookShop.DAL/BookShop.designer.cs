#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace BookShop.DAL
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="BookShop")]
	public partial class BookShopDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region 可扩展性方法定义
    partial void OnCreated();
    partial void InsertBooks(Books instance);
    partial void UpdateBooks(Books instance);
    partial void DeleteBooks(Books instance);
    partial void InsertCartItem(CartItem instance);
    partial void UpdateCartItem(CartItem instance);
    partial void DeleteCartItem(CartItem instance);
    partial void InsertCategory(Category instance);
    partial void UpdateCategory(Category instance);
    partial void DeleteCategory(Category instance);
    partial void InsertCollections(Collections instance);
    partial void UpdateCollections(Collections instance);
    partial void DeleteCollections(Collections instance);
    partial void InsertComment(Comment instance);
    partial void UpdateComment(Comment instance);
    partial void DeleteComment(Comment instance);
    partial void InsertOrder(Order instance);
    partial void UpdateOrder(Order instance);
    partial void DeleteOrder(Order instance);
    partial void InsertOrderItem(OrderItem instance);
    partial void UpdateOrderItem(OrderItem instance);
    partial void DeleteOrderItem(OrderItem instance);
    partial void InsertUserInfo(UserInfo instance);
    partial void UpdateUserInfo(UserInfo instance);
    partial void DeleteUserInfo(UserInfo instance);
    #endregion
		
		public BookShopDataContext() : 
				base(global::BookShop.DAL.Properties.Settings.Default.BookShopConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public BookShopDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public BookShopDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public BookShopDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public BookShopDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Books> Books
		{
			get
			{
				return this.GetTable<Books>();
			}
		}
		
		public System.Data.Linq.Table<CartItem> CartItem
		{
			get
			{
				return this.GetTable<CartItem>();
			}
		}
		
		public System.Data.Linq.Table<Category> Category
		{
			get
			{
				return this.GetTable<Category>();
			}
		}
		
		public System.Data.Linq.Table<Collections> Collections
		{
			get
			{
				return this.GetTable<Collections>();
			}
		}
		
		public System.Data.Linq.Table<Comment> Comment
		{
			get
			{
				return this.GetTable<Comment>();
			}
		}
		
		public System.Data.Linq.Table<Order> Order
		{
			get
			{
				return this.GetTable<Order>();
			}
		}
		
		public System.Data.Linq.Table<OrderItem> OrderItem
		{
			get
			{
				return this.GetTable<OrderItem>();
			}
		}
		
		public System.Data.Linq.Table<UserInfo> UserInfo
		{
			get
			{
				return this.GetTable<UserInfo>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Books")]
	public partial class Books : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _BookId;
		
		private int _CategoryId;
		
		private string _BookName;
		
		private string _ISBN;
		
		private string _Author;
		
		private string _PubHouse;
		
		private string _BookImage;
		
		private string _BookDescn;
		
		private System.Nullable<decimal> _ListPrice;
		
		private int _Quantity;
		
		private System.Nullable<int> _PraiseQty;
		
		private EntitySet<CartItem> _CartItem;
		
		private EntitySet<Collections> _Collections;
		
		private EntitySet<Comment> _Comment;
		
		private EntityRef<Category> _Category;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBookIdChanging(int value);
    partial void OnBookIdChanged();
    partial void OnCategoryIdChanging(int value);
    partial void OnCategoryIdChanged();
    partial void OnBookNameChanging(string value);
    partial void OnBookNameChanged();
    partial void OnISBNChanging(string value);
    partial void OnISBNChanged();
    partial void OnAuthorChanging(string value);
    partial void OnAuthorChanged();
    partial void OnPubHouseChanging(string value);
    partial void OnPubHouseChanged();
    partial void OnBookImageChanging(string value);
    partial void OnBookImageChanged();
    partial void OnBookDescnChanging(string value);
    partial void OnBookDescnChanged();
    partial void OnListPriceChanging(System.Nullable<decimal> value);
    partial void OnListPriceChanged();
    partial void OnQuantityChanging(int value);
    partial void OnQuantityChanged();
    partial void OnPraiseQtyChanging(System.Nullable<int> value);
    partial void OnPraiseQtyChanged();
    #endregion
		
		public Books()
		{
			this._CartItem = new EntitySet<CartItem>(new Action<CartItem>(this.attach_CartItem), new Action<CartItem>(this.detach_CartItem));
			this._Collections = new EntitySet<Collections>(new Action<Collections>(this.attach_Collections), new Action<Collections>(this.detach_Collections));
			this._Comment = new EntitySet<Comment>(new Action<Comment>(this.attach_Comment), new Action<Comment>(this.detach_Comment));
			this._Category = default(EntityRef<Category>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BookId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int BookId
		{
			get
			{
				return this._BookId;
			}
			set
			{
				if ((this._BookId != value))
				{
					this.OnBookIdChanging(value);
					this.SendPropertyChanging();
					this._BookId = value;
					this.SendPropertyChanged("BookId");
					this.OnBookIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CategoryId", DbType="Int NOT NULL")]
		public int CategoryId
		{
			get
			{
				return this._CategoryId;
			}
			set
			{
				if ((this._CategoryId != value))
				{
					if (this._Category.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCategoryIdChanging(value);
					this.SendPropertyChanging();
					this._CategoryId = value;
					this.SendPropertyChanged("CategoryId");
					this.OnCategoryIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BookName", DbType="NVarChar(80)")]
		public string BookName
		{
			get
			{
				return this._BookName;
			}
			set
			{
				if ((this._BookName != value))
				{
					this.OnBookNameChanging(value);
					this.SendPropertyChanging();
					this._BookName = value;
					this.SendPropertyChanged("BookName");
					this.OnBookNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ISBN", DbType="NVarChar(80)")]
		public string ISBN
		{
			get
			{
				return this._ISBN;
			}
			set
			{
				if ((this._ISBN != value))
				{
					this.OnISBNChanging(value);
					this.SendPropertyChanging();
					this._ISBN = value;
					this.SendPropertyChanged("ISBN");
					this.OnISBNChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Author", DbType="NVarChar(80)")]
		public string Author
		{
			get
			{
				return this._Author;
			}
			set
			{
				if ((this._Author != value))
				{
					this.OnAuthorChanging(value);
					this.SendPropertyChanging();
					this._Author = value;
					this.SendPropertyChanged("Author");
					this.OnAuthorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PubHouse", DbType="NVarChar(80)")]
		public string PubHouse
		{
			get
			{
				return this._PubHouse;
			}
			set
			{
				if ((this._PubHouse != value))
				{
					this.OnPubHouseChanging(value);
					this.SendPropertyChanging();
					this._PubHouse = value;
					this.SendPropertyChanged("PubHouse");
					this.OnPubHouseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BookImage", DbType="NVarChar(80)")]
		public string BookImage
		{
			get
			{
				return this._BookImage;
			}
			set
			{
				if ((this._BookImage != value))
				{
					this.OnBookImageChanging(value);
					this.SendPropertyChanging();
					this._BookImage = value;
					this.SendPropertyChanged("BookImage");
					this.OnBookImageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BookDescn", DbType="NVarChar(255)")]
		public string BookDescn
		{
			get
			{
				return this._BookDescn;
			}
			set
			{
				if ((this._BookDescn != value))
				{
					this.OnBookDescnChanging(value);
					this.SendPropertyChanging();
					this._BookDescn = value;
					this.SendPropertyChanged("BookDescn");
					this.OnBookDescnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ListPrice", DbType="Decimal(10,2)")]
		public System.Nullable<decimal> ListPrice
		{
			get
			{
				return this._ListPrice;
			}
			set
			{
				if ((this._ListPrice != value))
				{
					this.OnListPriceChanging(value);
					this.SendPropertyChanging();
					this._ListPrice = value;
					this.SendPropertyChanged("ListPrice");
					this.OnListPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantity", DbType="Int NOT NULL")]
		public int Quantity
		{
			get
			{
				return this._Quantity;
			}
			set
			{
				if ((this._Quantity != value))
				{
					this.OnQuantityChanging(value);
					this.SendPropertyChanging();
					this._Quantity = value;
					this.SendPropertyChanged("Quantity");
					this.OnQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PraiseQty", DbType="Int")]
		public System.Nullable<int> PraiseQty
		{
			get
			{
				return this._PraiseQty;
			}
			set
			{
				if ((this._PraiseQty != value))
				{
					this.OnPraiseQtyChanging(value);
					this.SendPropertyChanging();
					this._PraiseQty = value;
					this.SendPropertyChanged("PraiseQty");
					this.OnPraiseQtyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Books_CartItem", Storage="_CartItem", ThisKey="BookId", OtherKey="BookId")]
		public EntitySet<CartItem> CartItem
		{
			get
			{
				return this._CartItem;
			}
			set
			{
				this._CartItem.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Books_Collections", Storage="_Collections", ThisKey="BookId", OtherKey="BookId")]
		public EntitySet<Collections> Collections
		{
			get
			{
				return this._Collections;
			}
			set
			{
				this._Collections.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Books_Comment", Storage="_Comment", ThisKey="BookId", OtherKey="BookId")]
		public EntitySet<Comment> Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				this._Comment.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Category_Books", Storage="_Category", ThisKey="CategoryId", OtherKey="CategoryId", IsForeignKey=true)]
		public Category Category
		{
			get
			{
				return this._Category.Entity;
			}
			set
			{
				Category previousValue = this._Category.Entity;
				if (((previousValue != value) 
							|| (this._Category.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Category.Entity = null;
						previousValue.Books.Remove(this);
					}
					this._Category.Entity = value;
					if ((value != null))
					{
						value.Books.Add(this);
						this._CategoryId = value.CategoryId;
					}
					else
					{
						this._CategoryId = default(int);
					}
					this.SendPropertyChanged("Category");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CartItem(CartItem entity)
		{
			this.SendPropertyChanging();
			entity.Books = this;
		}
		
		private void detach_CartItem(CartItem entity)
		{
			this.SendPropertyChanging();
			entity.Books = null;
		}
		
		private void attach_Collections(Collections entity)
		{
			this.SendPropertyChanging();
			entity.Books = this;
		}
		
		private void detach_Collections(Collections entity)
		{
			this.SendPropertyChanging();
			entity.Books = null;
		}
		
		private void attach_Comment(Comment entity)
		{
			this.SendPropertyChanging();
			entity.Books = this;
		}
		
		private void detach_Comment(Comment entity)
		{
			this.SendPropertyChanging();
			entity.Books = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CartItem")]
	public partial class CartItem : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CartItemId;
		
		private int _UserId;
		
		private int _BookId;
		
		private string _ProName;
		
		private System.Nullable<decimal> _ProPrice;
		
		private int _ProQty;
		
		private EntityRef<Books> _Books;
		
		private EntityRef<UserInfo> _UserInfo;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCartItemIdChanging(int value);
    partial void OnCartItemIdChanged();
    partial void OnUserIdChanging(int value);
    partial void OnUserIdChanged();
    partial void OnBookIdChanging(int value);
    partial void OnBookIdChanged();
    partial void OnProNameChanging(string value);
    partial void OnProNameChanged();
    partial void OnProPriceChanging(System.Nullable<decimal> value);
    partial void OnProPriceChanged();
    partial void OnProQtyChanging(int value);
    partial void OnProQtyChanged();
    #endregion
		
		public CartItem()
		{
			this._Books = default(EntityRef<Books>);
			this._UserInfo = default(EntityRef<UserInfo>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CartItemId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int CartItemId
		{
			get
			{
				return this._CartItemId;
			}
			set
			{
				if ((this._CartItemId != value))
				{
					this.OnCartItemIdChanging(value);
					this.SendPropertyChanging();
					this._CartItemId = value;
					this.SendPropertyChanged("CartItemId");
					this.OnCartItemIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="Int NOT NULL")]
		public int UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._UserInfo.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BookId", DbType="Int NOT NULL")]
		public int BookId
		{
			get
			{
				return this._BookId;
			}
			set
			{
				if ((this._BookId != value))
				{
					if (this._Books.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBookIdChanging(value);
					this.SendPropertyChanging();
					this._BookId = value;
					this.SendPropertyChanged("BookId");
					this.OnBookIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProName", DbType="NVarChar(80)")]
		public string ProName
		{
			get
			{
				return this._ProName;
			}
			set
			{
				if ((this._ProName != value))
				{
					this.OnProNameChanging(value);
					this.SendPropertyChanging();
					this._ProName = value;
					this.SendPropertyChanged("ProName");
					this.OnProNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProPrice", DbType="Decimal(10,2)")]
		public System.Nullable<decimal> ProPrice
		{
			get
			{
				return this._ProPrice;
			}
			set
			{
				if ((this._ProPrice != value))
				{
					this.OnProPriceChanging(value);
					this.SendPropertyChanging();
					this._ProPrice = value;
					this.SendPropertyChanged("ProPrice");
					this.OnProPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProQty", DbType="Int NOT NULL")]
		public int ProQty
		{
			get
			{
				return this._ProQty;
			}
			set
			{
				if ((this._ProQty != value))
				{
					this.OnProQtyChanging(value);
					this.SendPropertyChanging();
					this._ProQty = value;
					this.SendPropertyChanged("ProQty");
					this.OnProQtyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Books_CartItem", Storage="_Books", ThisKey="BookId", OtherKey="BookId", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Books Books
		{
			get
			{
				return this._Books.Entity;
			}
			set
			{
				Books previousValue = this._Books.Entity;
				if (((previousValue != value) 
							|| (this._Books.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Books.Entity = null;
						previousValue.CartItem.Remove(this);
					}
					this._Books.Entity = value;
					if ((value != null))
					{
						value.CartItem.Add(this);
						this._BookId = value.BookId;
					}
					else
					{
						this._BookId = default(int);
					}
					this.SendPropertyChanged("Books");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserInfo_CartItem", Storage="_UserInfo", ThisKey="UserId", OtherKey="UserId", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public UserInfo UserInfo
		{
			get
			{
				return this._UserInfo.Entity;
			}
			set
			{
				UserInfo previousValue = this._UserInfo.Entity;
				if (((previousValue != value) 
							|| (this._UserInfo.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._UserInfo.Entity = null;
						previousValue.CartItem.Remove(this);
					}
					this._UserInfo.Entity = value;
					if ((value != null))
					{
						value.CartItem.Add(this);
						this._UserId = value.UserId;
					}
					else
					{
						this._UserId = default(int);
					}
					this.SendPropertyChanged("UserInfo");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Category")]
	public partial class Category : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CategoryId;
		
		private string _CategoryName;
		
		private EntitySet<Books> _Books;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCategoryIdChanging(int value);
    partial void OnCategoryIdChanged();
    partial void OnCategoryNameChanging(string value);
    partial void OnCategoryNameChanged();
    #endregion
		
		public Category()
		{
			this._Books = new EntitySet<Books>(new Action<Books>(this.attach_Books), new Action<Books>(this.detach_Books));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CategoryId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int CategoryId
		{
			get
			{
				return this._CategoryId;
			}
			set
			{
				if ((this._CategoryId != value))
				{
					this.OnCategoryIdChanging(value);
					this.SendPropertyChanging();
					this._CategoryId = value;
					this.SendPropertyChanged("CategoryId");
					this.OnCategoryIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CategoryName", DbType="NVarChar(80)")]
		public string CategoryName
		{
			get
			{
				return this._CategoryName;
			}
			set
			{
				if ((this._CategoryName != value))
				{
					this.OnCategoryNameChanging(value);
					this.SendPropertyChanging();
					this._CategoryName = value;
					this.SendPropertyChanged("CategoryName");
					this.OnCategoryNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Category_Books", Storage="_Books", ThisKey="CategoryId", OtherKey="CategoryId")]
		public EntitySet<Books> Books
		{
			get
			{
				return this._Books;
			}
			set
			{
				this._Books.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Books(Books entity)
		{
			this.SendPropertyChanging();
			entity.Category = this;
		}
		
		private void detach_Books(Books entity)
		{
			this.SendPropertyChanging();
			entity.Category = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Collections")]
	public partial class Collections : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CollectionId;
		
		private int _BookId;
		
		private int _UserId;
		
		private string _BookName;
		
		private System.Nullable<decimal> _ListPrice;
		
		private EntityRef<Books> _Books;
		
		private EntityRef<UserInfo> _UserInfo;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCollectionIdChanging(int value);
    partial void OnCollectionIdChanged();
    partial void OnBookIdChanging(int value);
    partial void OnBookIdChanged();
    partial void OnUserIdChanging(int value);
    partial void OnUserIdChanged();
    partial void OnBookNameChanging(string value);
    partial void OnBookNameChanged();
    partial void OnListPriceChanging(System.Nullable<decimal> value);
    partial void OnListPriceChanged();
    #endregion
		
		public Collections()
		{
			this._Books = default(EntityRef<Books>);
			this._UserInfo = default(EntityRef<UserInfo>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CollectionId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int CollectionId
		{
			get
			{
				return this._CollectionId;
			}
			set
			{
				if ((this._CollectionId != value))
				{
					this.OnCollectionIdChanging(value);
					this.SendPropertyChanging();
					this._CollectionId = value;
					this.SendPropertyChanged("CollectionId");
					this.OnCollectionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BookId", DbType="Int NOT NULL")]
		public int BookId
		{
			get
			{
				return this._BookId;
			}
			set
			{
				if ((this._BookId != value))
				{
					if (this._Books.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBookIdChanging(value);
					this.SendPropertyChanging();
					this._BookId = value;
					this.SendPropertyChanged("BookId");
					this.OnBookIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="Int NOT NULL")]
		public int UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._UserInfo.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BookName", DbType="NVarChar(80)")]
		public string BookName
		{
			get
			{
				return this._BookName;
			}
			set
			{
				if ((this._BookName != value))
				{
					this.OnBookNameChanging(value);
					this.SendPropertyChanging();
					this._BookName = value;
					this.SendPropertyChanged("BookName");
					this.OnBookNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ListPrice", DbType="Decimal(10,2)")]
		public System.Nullable<decimal> ListPrice
		{
			get
			{
				return this._ListPrice;
			}
			set
			{
				if ((this._ListPrice != value))
				{
					this.OnListPriceChanging(value);
					this.SendPropertyChanging();
					this._ListPrice = value;
					this.SendPropertyChanged("ListPrice");
					this.OnListPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Books_Collections", Storage="_Books", ThisKey="BookId", OtherKey="BookId", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Books Books
		{
			get
			{
				return this._Books.Entity;
			}
			set
			{
				Books previousValue = this._Books.Entity;
				if (((previousValue != value) 
							|| (this._Books.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Books.Entity = null;
						previousValue.Collections.Remove(this);
					}
					this._Books.Entity = value;
					if ((value != null))
					{
						value.Collections.Add(this);
						this._BookId = value.BookId;
					}
					else
					{
						this._BookId = default(int);
					}
					this.SendPropertyChanged("Books");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserInfo_Collections", Storage="_UserInfo", ThisKey="UserId", OtherKey="UserId", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public UserInfo UserInfo
		{
			get
			{
				return this._UserInfo.Entity;
			}
			set
			{
				UserInfo previousValue = this._UserInfo.Entity;
				if (((previousValue != value) 
							|| (this._UserInfo.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._UserInfo.Entity = null;
						previousValue.Collections.Remove(this);
					}
					this._UserInfo.Entity = value;
					if ((value != null))
					{
						value.Collections.Add(this);
						this._UserId = value.UserId;
					}
					else
					{
						this._UserId = default(int);
					}
					this.SendPropertyChanged("UserInfo");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Comment")]
	public partial class Comment : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CommentId;
		
		private int _BookId;
		
		private int _UserId;
		
		private string _TextContent;
		
		private System.Nullable<System.DateTime> _ComDateTime;
		
		private EntityRef<Books> _Books;
		
		private EntityRef<UserInfo> _UserInfo;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCommentIdChanging(int value);
    partial void OnCommentIdChanged();
    partial void OnBookIdChanging(int value);
    partial void OnBookIdChanged();
    partial void OnUserIdChanging(int value);
    partial void OnUserIdChanged();
    partial void OnTextContentChanging(string value);
    partial void OnTextContentChanged();
    partial void OnComDateTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnComDateTimeChanged();
    #endregion
		
		public Comment()
		{
			this._Books = default(EntityRef<Books>);
			this._UserInfo = default(EntityRef<UserInfo>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CommentId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int CommentId
		{
			get
			{
				return this._CommentId;
			}
			set
			{
				if ((this._CommentId != value))
				{
					this.OnCommentIdChanging(value);
					this.SendPropertyChanging();
					this._CommentId = value;
					this.SendPropertyChanged("CommentId");
					this.OnCommentIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BookId", DbType="Int NOT NULL")]
		public int BookId
		{
			get
			{
				return this._BookId;
			}
			set
			{
				if ((this._BookId != value))
				{
					if (this._Books.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBookIdChanging(value);
					this.SendPropertyChanging();
					this._BookId = value;
					this.SendPropertyChanged("BookId");
					this.OnBookIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="Int NOT NULL")]
		public int UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._UserInfo.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TextContent", DbType="NVarChar(255)")]
		public string TextContent
		{
			get
			{
				return this._TextContent;
			}
			set
			{
				if ((this._TextContent != value))
				{
					this.OnTextContentChanging(value);
					this.SendPropertyChanging();
					this._TextContent = value;
					this.SendPropertyChanged("TextContent");
					this.OnTextContentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ComDateTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> ComDateTime
		{
			get
			{
				return this._ComDateTime;
			}
			set
			{
				if ((this._ComDateTime != value))
				{
					this.OnComDateTimeChanging(value);
					this.SendPropertyChanging();
					this._ComDateTime = value;
					this.SendPropertyChanged("ComDateTime");
					this.OnComDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Books_Comment", Storage="_Books", ThisKey="BookId", OtherKey="BookId", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Books Books
		{
			get
			{
				return this._Books.Entity;
			}
			set
			{
				Books previousValue = this._Books.Entity;
				if (((previousValue != value) 
							|| (this._Books.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Books.Entity = null;
						previousValue.Comment.Remove(this);
					}
					this._Books.Entity = value;
					if ((value != null))
					{
						value.Comment.Add(this);
						this._BookId = value.BookId;
					}
					else
					{
						this._BookId = default(int);
					}
					this.SendPropertyChanged("Books");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserInfo_Comment", Storage="_UserInfo", ThisKey="UserId", OtherKey="UserId", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public UserInfo UserInfo
		{
			get
			{
				return this._UserInfo.Entity;
			}
			set
			{
				UserInfo previousValue = this._UserInfo.Entity;
				if (((previousValue != value) 
							|| (this._UserInfo.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._UserInfo.Entity = null;
						previousValue.Comment.Remove(this);
					}
					this._UserInfo.Entity = value;
					if ((value != null))
					{
						value.Comment.Add(this);
						this._UserId = value.UserId;
					}
					else
					{
						this._UserId = default(int);
					}
					this.SendPropertyChanged("UserInfo");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[Order]")]
	public partial class Order : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _OrderId;
		
		private int _UserId;
		
		private string _UserName;
		
		private System.DateTime _OrderDate;
		
		private string _UserAddress;
		
		private string _Zip;
		
		private string _Tel;
		
		private string _Status;
		
		private EntitySet<OrderItem> _OrderItem;
		
		private EntityRef<UserInfo> _UserInfo;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnOrderIdChanging(int value);
    partial void OnOrderIdChanged();
    partial void OnUserIdChanging(int value);
    partial void OnUserIdChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnOrderDateChanging(System.DateTime value);
    partial void OnOrderDateChanged();
    partial void OnUserAddressChanging(string value);
    partial void OnUserAddressChanged();
    partial void OnZipChanging(string value);
    partial void OnZipChanged();
    partial void OnTelChanging(string value);
    partial void OnTelChanged();
    partial void OnStatusChanging(string value);
    partial void OnStatusChanged();
    #endregion
		
		public Order()
		{
			this._OrderItem = new EntitySet<OrderItem>(new Action<OrderItem>(this.attach_OrderItem), new Action<OrderItem>(this.detach_OrderItem));
			this._UserInfo = default(EntityRef<UserInfo>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int OrderId
		{
			get
			{
				return this._OrderId;
			}
			set
			{
				if ((this._OrderId != value))
				{
					this.OnOrderIdChanging(value);
					this.SendPropertyChanging();
					this._OrderId = value;
					this.SendPropertyChanged("OrderId");
					this.OnOrderIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="Int NOT NULL")]
		public int UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._UserInfo.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="NVarChar(80) NOT NULL", CanBeNull=false)]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderDate", DbType="DateTime NOT NULL")]
		public System.DateTime OrderDate
		{
			get
			{
				return this._OrderDate;
			}
			set
			{
				if ((this._OrderDate != value))
				{
					this.OnOrderDateChanging(value);
					this.SendPropertyChanging();
					this._OrderDate = value;
					this.SendPropertyChanged("OrderDate");
					this.OnOrderDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserAddress", DbType="NVarChar(255)")]
		public string UserAddress
		{
			get
			{
				return this._UserAddress;
			}
			set
			{
				if ((this._UserAddress != value))
				{
					this.OnUserAddressChanging(value);
					this.SendPropertyChanging();
					this._UserAddress = value;
					this.SendPropertyChanged("UserAddress");
					this.OnUserAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Zip", DbType="NVarChar(6)")]
		public string Zip
		{
			get
			{
				return this._Zip;
			}
			set
			{
				if ((this._Zip != value))
				{
					this.OnZipChanging(value);
					this.SendPropertyChanging();
					this._Zip = value;
					this.SendPropertyChanged("Zip");
					this.OnZipChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tel", DbType="NVarChar(80)")]
		public string Tel
		{
			get
			{
				return this._Tel;
			}
			set
			{
				if ((this._Tel != value))
				{
					this.OnTelChanging(value);
					this.SendPropertyChanging();
					this._Tel = value;
					this.SendPropertyChanged("Tel");
					this.OnTelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="NVarChar(10)")]
		public string Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Order_OrderItem", Storage="_OrderItem", ThisKey="OrderId", OtherKey="OrderId")]
		public EntitySet<OrderItem> OrderItem
		{
			get
			{
				return this._OrderItem;
			}
			set
			{
				this._OrderItem.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserInfo_Order", Storage="_UserInfo", ThisKey="UserId", OtherKey="UserId", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public UserInfo UserInfo
		{
			get
			{
				return this._UserInfo.Entity;
			}
			set
			{
				UserInfo previousValue = this._UserInfo.Entity;
				if (((previousValue != value) 
							|| (this._UserInfo.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._UserInfo.Entity = null;
						previousValue.Order.Remove(this);
					}
					this._UserInfo.Entity = value;
					if ((value != null))
					{
						value.Order.Add(this);
						this._UserId = value.UserId;
					}
					else
					{
						this._UserId = default(int);
					}
					this.SendPropertyChanged("UserInfo");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_OrderItem(OrderItem entity)
		{
			this.SendPropertyChanging();
			entity.Order = this;
		}
		
		private void detach_OrderItem(OrderItem entity)
		{
			this.SendPropertyChanging();
			entity.Order = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.OrderItem")]
	public partial class OrderItem : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ItemId;
		
		private int _OrderId;
		
		private string _ProName;
		
		private System.Nullable<decimal> _ProPrice;
		
		private int _ProQty;
		
		private System.Nullable<decimal> _TotalPrice;
		
		private EntityRef<Order> _Order;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnItemIdChanging(int value);
    partial void OnItemIdChanged();
    partial void OnOrderIdChanging(int value);
    partial void OnOrderIdChanged();
    partial void OnProNameChanging(string value);
    partial void OnProNameChanged();
    partial void OnProPriceChanging(System.Nullable<decimal> value);
    partial void OnProPriceChanged();
    partial void OnProQtyChanging(int value);
    partial void OnProQtyChanged();
    partial void OnTotalPriceChanging(System.Nullable<decimal> value);
    partial void OnTotalPriceChanged();
    #endregion
		
		public OrderItem()
		{
			this._Order = default(EntityRef<Order>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ItemId
		{
			get
			{
				return this._ItemId;
			}
			set
			{
				if ((this._ItemId != value))
				{
					this.OnItemIdChanging(value);
					this.SendPropertyChanging();
					this._ItemId = value;
					this.SendPropertyChanged("ItemId");
					this.OnItemIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderId", DbType="Int NOT NULL")]
		public int OrderId
		{
			get
			{
				return this._OrderId;
			}
			set
			{
				if ((this._OrderId != value))
				{
					if (this._Order.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOrderIdChanging(value);
					this.SendPropertyChanging();
					this._OrderId = value;
					this.SendPropertyChanged("OrderId");
					this.OnOrderIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProName", DbType="NVarChar(80)")]
		public string ProName
		{
			get
			{
				return this._ProName;
			}
			set
			{
				if ((this._ProName != value))
				{
					this.OnProNameChanging(value);
					this.SendPropertyChanging();
					this._ProName = value;
					this.SendPropertyChanged("ProName");
					this.OnProNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProPrice", DbType="Decimal(10,2)")]
		public System.Nullable<decimal> ProPrice
		{
			get
			{
				return this._ProPrice;
			}
			set
			{
				if ((this._ProPrice != value))
				{
					this.OnProPriceChanging(value);
					this.SendPropertyChanging();
					this._ProPrice = value;
					this.SendPropertyChanged("ProPrice");
					this.OnProPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProQty", DbType="Int NOT NULL")]
		public int ProQty
		{
			get
			{
				return this._ProQty;
			}
			set
			{
				if ((this._ProQty != value))
				{
					this.OnProQtyChanging(value);
					this.SendPropertyChanging();
					this._ProQty = value;
					this.SendPropertyChanged("ProQty");
					this.OnProQtyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalPrice", DbType="Decimal(10,2)")]
		public System.Nullable<decimal> TotalPrice
		{
			get
			{
				return this._TotalPrice;
			}
			set
			{
				if ((this._TotalPrice != value))
				{
					this.OnTotalPriceChanging(value);
					this.SendPropertyChanging();
					this._TotalPrice = value;
					this.SendPropertyChanged("TotalPrice");
					this.OnTotalPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Order_OrderItem", Storage="_Order", ThisKey="OrderId", OtherKey="OrderId", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Order Order
		{
			get
			{
				return this._Order.Entity;
			}
			set
			{
				Order previousValue = this._Order.Entity;
				if (((previousValue != value) 
							|| (this._Order.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Order.Entity = null;
						previousValue.OrderItem.Remove(this);
					}
					this._Order.Entity = value;
					if ((value != null))
					{
						value.OrderItem.Add(this);
						this._OrderId = value.OrderId;
					}
					else
					{
						this._OrderId = default(int);
					}
					this.SendPropertyChanged("Order");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UserInfo")]
	public partial class UserInfo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _UserId;
		
		private string _UserName;
		
		private string _UserPsd;
		
		private string _PayPsd;
		
		private string _Email;
		
		private string _UserAdd;
		
		private System.Data.Linq.Binary _UserImage;
		
		private System.Nullable<decimal> _Amount;
		
		private string _UserType;
		
		private EntitySet<CartItem> _CartItem;
		
		private EntitySet<Collections> _Collections;
		
		private EntitySet<Comment> _Comment;
		
		private EntitySet<Order> _Order;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserIdChanging(int value);
    partial void OnUserIdChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnUserPsdChanging(string value);
    partial void OnUserPsdChanged();
    partial void OnPayPsdChanging(string value);
    partial void OnPayPsdChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnUserAddChanging(string value);
    partial void OnUserAddChanged();
    partial void OnUserImageChanging(System.Data.Linq.Binary value);
    partial void OnUserImageChanged();
    partial void OnAmountChanging(System.Nullable<decimal> value);
    partial void OnAmountChanged();
    partial void OnUserTypeChanging(string value);
    partial void OnUserTypeChanged();
    #endregion
		
		public UserInfo()
		{
			this._CartItem = new EntitySet<CartItem>(new Action<CartItem>(this.attach_CartItem), new Action<CartItem>(this.detach_CartItem));
			this._Collections = new EntitySet<Collections>(new Action<Collections>(this.attach_Collections), new Action<Collections>(this.detach_Collections));
			this._Comment = new EntitySet<Comment>(new Action<Comment>(this.attach_Comment), new Action<Comment>(this.detach_Comment));
			this._Order = new EntitySet<Order>(new Action<Order>(this.attach_Order), new Action<Order>(this.detach_Order));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="NVarChar(80) NOT NULL", CanBeNull=false)]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserPsd", DbType="NVarChar(80) NOT NULL", CanBeNull=false)]
		public string UserPsd
		{
			get
			{
				return this._UserPsd;
			}
			set
			{
				if ((this._UserPsd != value))
				{
					this.OnUserPsdChanging(value);
					this.SendPropertyChanging();
					this._UserPsd = value;
					this.SendPropertyChanged("UserPsd");
					this.OnUserPsdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PayPsd", DbType="NVarChar(80)")]
		public string PayPsd
		{
			get
			{
				return this._PayPsd;
			}
			set
			{
				if ((this._PayPsd != value))
				{
					this.OnPayPsdChanging(value);
					this.SendPropertyChanging();
					this._PayPsd = value;
					this.SendPropertyChanged("PayPsd");
					this.OnPayPsdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(80) NOT NULL", CanBeNull=false)]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserAdd", DbType="NVarChar(100)")]
		public string UserAdd
		{
			get
			{
				return this._UserAdd;
			}
			set
			{
				if ((this._UserAdd != value))
				{
					this.OnUserAddChanging(value);
					this.SendPropertyChanging();
					this._UserAdd = value;
					this.SendPropertyChanged("UserAdd");
					this.OnUserAddChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserImage", DbType="Image", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary UserImage
		{
			get
			{
				return this._UserImage;
			}
			set
			{
				if ((this._UserImage != value))
				{
					this.OnUserImageChanging(value);
					this.SendPropertyChanging();
					this._UserImage = value;
					this.SendPropertyChanged("UserImage");
					this.OnUserImageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Decimal(10,2)")]
		public System.Nullable<decimal> Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this.OnAmountChanging(value);
					this.SendPropertyChanging();
					this._Amount = value;
					this.SendPropertyChanged("Amount");
					this.OnAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserType", DbType="NVarChar(5) NOT NULL", CanBeNull=false)]
		public string UserType
		{
			get
			{
				return this._UserType;
			}
			set
			{
				if ((this._UserType != value))
				{
					this.OnUserTypeChanging(value);
					this.SendPropertyChanging();
					this._UserType = value;
					this.SendPropertyChanged("UserType");
					this.OnUserTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserInfo_CartItem", Storage="_CartItem", ThisKey="UserId", OtherKey="UserId")]
		public EntitySet<CartItem> CartItem
		{
			get
			{
				return this._CartItem;
			}
			set
			{
				this._CartItem.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserInfo_Collections", Storage="_Collections", ThisKey="UserId", OtherKey="UserId")]
		public EntitySet<Collections> Collections
		{
			get
			{
				return this._Collections;
			}
			set
			{
				this._Collections.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserInfo_Comment", Storage="_Comment", ThisKey="UserId", OtherKey="UserId")]
		public EntitySet<Comment> Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				this._Comment.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserInfo_Order", Storage="_Order", ThisKey="UserId", OtherKey="UserId")]
		public EntitySet<Order> Order
		{
			get
			{
				return this._Order;
			}
			set
			{
				this._Order.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CartItem(CartItem entity)
		{
			this.SendPropertyChanging();
			entity.UserInfo = this;
		}
		
		private void detach_CartItem(CartItem entity)
		{
			this.SendPropertyChanging();
			entity.UserInfo = null;
		}
		
		private void attach_Collections(Collections entity)
		{
			this.SendPropertyChanging();
			entity.UserInfo = this;
		}
		
		private void detach_Collections(Collections entity)
		{
			this.SendPropertyChanging();
			entity.UserInfo = null;
		}
		
		private void attach_Comment(Comment entity)
		{
			this.SendPropertyChanging();
			entity.UserInfo = this;
		}
		
		private void detach_Comment(Comment entity)
		{
			this.SendPropertyChanging();
			entity.UserInfo = null;
		}
		
		private void attach_Order(Order entity)
		{
			this.SendPropertyChanging();
			entity.UserInfo = this;
		}
		
		private void detach_Order(Order entity)
		{
			this.SendPropertyChanging();
			entity.UserInfo = null;
		}
	}
}
#pragma warning restore 1591
